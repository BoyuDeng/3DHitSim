numFields = 5;     % You have fields1 to fields5
start_num = 5500;
end_num = 9000;
numb = end_num-start_num;
dt = 1e-3;
t = 0:dt:numb*dt;
p = 1;
tau_p = 1e-2;
Forcing = 1;
N = 1; % Number of parallel searches
% resultsU8ul5 = cell(1, N);
% fvalsU8ul5 = cell(1, N);
% 
% resultsTest1 = cell(1, N);
% fvalsTest1 = cell(1, N);
% 
% 
% resultsU8ul1high = cell(1, N);
% fvalsU8ul1high = cell(1, N);

%U8_3 t=150
%%
tic

G = [0.25, 1];

Ghigh = [2.5, 25];

% Initialize result storage
resultsU8_5 = cell(numFields, 1);
fvalsU8_5   = cell(numFields, 1);
resultsU8_10 = cell(numFields, 1);
fvalsU8_10   = cell(numFields, 1);
resultsU8_15 = cell(numFields, 1);
fvalsU8_15   = cell(numFields, 1);
resultsU8_20 = cell(numFields, 1);
fvalsU8_20   = cell(numFields, 1);
resultsU8_30 = cell(numFields, 1);
fvalsU8_30   = cell(numFields, 1);
resultsU8_40 = cell(numFields, 1);
fvalsU8_40   = cell(numFields, 1);



% Initialize result storage
resultsU8_5high = cell(numFields, 1);
fvalsU8_5high   = cell(numFields, 1);
resultsU8_10high = cell(numFields, 1);
fvalsU8_10high   = cell(numFields, 1);
resultsU8_15high = cell(numFields, 1);
fvalsU8_15high   = cell(numFields, 1);
resultsU8_20high = cell(numFields, 1);
fvalsU8_20high   = cell(numFields, 1);
resultsU8_30high = cell(numFields, 1);
fvalsU8_30high   = cell(numFields, 1);
resultsU8_40high = cell(numFields, 1);
fvalsU8_40high   = cell(numFields, 1);
resultsU8_50high = cell(numFields, 1);
fvalsU8_50high   = cell(numFields, 1);
resultsU8_60high = cell(numFields, 1);
fvalsU8_60high   = cell(numFields, 1);



for fieldIdx = 1:numFields

    
    % Define the file path dynamically
    file_path = sprintf('/Users/boyi/Simulations/hit/output_fields%dU=8', 100);

    % Read all field files
    numFiles = end_num - start_num + 1;
    variables_list = cell(numFiles, 1);
    
    for i = start_num:end_num
        filename = fullfile(file_path, sprintf('field_%05d', i));
        [~, ~, ~, ~, variables] = read_field_file(filename);
        variables_list{i - start_num + 1} = variables;
    end
    
    % Extract u, v, w fields
    uField = cell(numFiles, 1);
    vField = cell(numFiles, 1);
    wField = cell(numFiles, 1);
    
    for i = 1:numFiles
        data = variables_list{i};
        uField{i} = data(1);
        vField{i} = data(2);
        wField{i} = data(3);
    end
    
    % Calculate RMS velocity U
    U = calculateRMS(uField(1:100), vField(1:100), wField(1:100));
    
    % First optimization
    tempResults5 = cell(1, N);
    tempFval5 = cell(1, N);
    parfor i = 1:N
        [tempResults5{i}.coeffs, tempResults5{i}.W, tempResults5{i}.energy, tempFval5{i}] = ...
            optimization27(t, U, uField, vField, wField, dt, p, U, Forcing, 1000, 5, G(i), 2, 30, 1, 1, []);
    end
    resultsU8_5{fieldIdx} = tempResults5;
    fvalsU8_5{fieldIdx} = tempFval5;

    % Second optimization
    tempResults10 = cell(1,N);
    tempFval10 = cell(1,N);
    parfor i = 1:N
        [tempResults10{i}.coeffs, tempResults10{i}.W, tempResults10{i}.energy, tempFval10{i}] = ...
            optimization27(t, tempResults5{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 10, G(i), 2, 30, 1, 1, tempResults5{i}.coeffs);
    end
    resultsU8_10{fieldIdx} = tempResults10;
    fvalsU8_10{fieldIdx} = tempFval10;

    tempResults15 = cell(1, N);
tempFval15 = cell(1, N);
parfor i = 1:N
    [tempResults15{i}.coeffs, tempResults15{i}.W, tempResults15{i}.energy, tempFval15{i}] = ...
        optimization27(t, tempResults10{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 15, G(i), 2, 30, 1, 1, tempResults10{i}.coeffs);
end
resultsU8_15{fieldIdx} = tempResults15;
fvalsU8_15{fieldIdx} = tempFval15;

% Fourth optimization (step = 20)
tempResults20 = cell(1, N);
tempFval20 = cell(1, N);
parfor i = 1:N
    [tempResults20{i}.coeffs, tempResults20{i}.W, tempResults20{i}.energy, tempFval20{i}] = ...
        optimization27(t, tempResults15{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 20, G(i), 2, 30, 1, 1, tempResults15{i}.coeffs);
end
resultsU8_20{fieldIdx} = tempResults20;
fvalsU8_20{fieldIdx} = tempFval20;


% tempResults30 = cell(1, N);
% tempFval30 = cell(1, N);
% parfor i = 1:N
%     [tempResults30{i}.coeffs, tempResults30{i}.W, tempResults30{i}.energy, tempFval30{i}] = ...
%         optimization27(t, tempResults20{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 30, G(i), 2, 30, 1, 1, tempResults20{i}.coeffs);
% end
% resultsU8_30{fieldIdx} = tempResults30;
% fvalsU8_30{fieldIdx} = tempFval30;
% 
% tempResults40 = cell(1, N);
% tempFval40 = cell(1, N);
% parfor i = 1:N
%     [tempResults40{i}.coeffs, tempResults40{i}.W, tempResults40{i}.energy, tempFval40{i}] = ...
%         optimization27(t, tempResults30{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 40, G(i), 2, 30, 1, 1, tempResults30{i}.coeffs);
% end
% resultsU8_40{fieldIdx} = tempResults40;
% fvalsU8_40{fieldIdx} = tempFval40;









% First optimization
tempResults5 = cell(1, N);
tempFval5 = cell(1, N);
parfor i = 1:N
    [tempResults5{i}.coeffs, tempResults5{i}.W, tempResults5{i}.energy, tempFval5{i}] = ...
        optimization27(t, U, uField, vField, wField, dt, p, U, Forcing, 1000, 5, Ghigh(i), 2, 300, 1, 1, []);
end
resultsU8_5high{fieldIdx} = tempResults5;
fvalsU8_5high{fieldIdx} = tempFval5;

% Second optimization
tempResults10 = cell(1,N);
tempFval10 = cell(1,N);
parfor i = 1:N
    [tempResults10{i}.coeffs, tempResults10{i}.W, tempResults10{i}.energy, tempFval10{i}] = ...
        optimization27(t, tempResults5{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 10, Ghigh(i), 2, 300, 1, 1, tempResults5{i}.coeffs);
end
resultsU8_10high{fieldIdx} = tempResults10;
fvalsU8_10high{fieldIdx} = tempFval10;

% Third optimization (step = 15)
tempResults15 = cell(1, N);
tempFval15 = cell(1, N);
parfor i = 1:N
    [tempResults15{i}.coeffs, tempResults15{i}.W, tempResults15{i}.energy, tempFval15{i}] = ...
        optimization27(t, tempResults10{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 15, Ghigh(i), 2, 300, 1, 1, tempResults10{i}.coeffs);
end
resultsU8_15high{fieldIdx} = tempResults15;
fvalsU8_15high{fieldIdx} = tempFval15;

% Fourth optimization (step = 20)
tempResults20 = cell(1, N);
tempFval20 = cell(1, N);
parfor i = 1:N
    [tempResults20{i}.coeffs, tempResults20{i}.W, tempResults20{i}.energy, tempFval20{i}] = ...
        optimization27(t, tempResults15{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 20, Ghigh(i), 2, 300, 1, 1, tempResults15{i}.coeffs);
end
resultsU8_20high{fieldIdx} = tempResults20;
fvalsU8_20high{fieldIdx} = tempFval20;



% % Fifth optimization (step = 30)
% tempResults30 = cell(1, N);
% tempFval30 = cell(1, N);
% parfor i = 1:N
%     [tempResults30{i}.coeffs, tempResults30{i}.W, tempResults30{i}.energy, tempFval30{i}] = ...
%         optimization27(t, tempResults20{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 30, Ghigh(i), 2, 300, 1, 1, tempResults20{i}.coeffs);
% end
% resultsU8_30high{fieldIdx} = tempResults30;
% fvalsU8_30high{fieldIdx} = tempFval30;
% 
% % Sixth optimization (step = 40)
% tempResults40 = cell(1, N);
% tempFval40 = cell(1, N);
% parfor i = 1:N
%     [tempResults40{i}.coeffs, tempResults40{i}.W, tempResults40{i}.energy, tempFval40{i}] = ...
%         optimization27(t, tempResults30{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 40, Ghigh(i), 2, 300, 1, 1, tempResults30{i}.coeffs);
% end
% resultsU8_40high{fieldIdx} = tempResults40;
% fvalsU8_40high{fieldIdx} = tempFval40;

% Seventh optimization (step = 50)
% tempResults50 = cell(1, N);
% tempFval50 = cell(1, N);
% parfor i = 1:N
%     [tempResults50{i}.coeffs, tempResults50{i}.W, tempResults50{i}.energy, tempFval50{i}] = ...
%         optimization27(t, tempResults40{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 50, Ghigh(i), 2, 300, 1, 1, tempResults40{i}.coeffs);
% end
% resultsU8_50high{fieldIdx} = tempResults50;
% fvalsU8_50high{fieldIdx} = tempFval50;
% 
% % Eighth optimization (step = 60)
% tempResults60 = cell(1, N);
% tempFval60 = cell(1, N);
% parfor i = 1:N
%     [tempResults60{i}.coeffs, tempResults60{i}.W, tempResults60{i}.energy, tempFval60{i}] = ...
%         optimization27(t, tempResults50{i}.W, uField, vField, wField, dt, p, U, Forcing, 1000, 60, Ghigh(i), 2, 300, 1, 1, tempResults50{i}.coeffs);
% end
% resultsU8_60high{fieldIdx} = tempResults60;
% fvalsU8_60high{fieldIdx} = tempFval60;








end





% resultsall = cell(numFields,1);
% fvalsall = resultsall;
% Gall = [Ghigh];
% for i = 1:numFields
%     resultsall{i} = [resultsU8_10high{i}];
%     fvalsall{i} = [fvalsU8_10high{i}];% now each is 1x26
% end


resultsall = cell(numFields,1);
fvalsall = resultsall;
Gall = [G, Ghigh];
for i = 1:numFields
    resultsall{i} = [resultsU8_20{i}, resultsU8_20high{i}];
    fvalsall{i} = [fvalsU8_20{i}, fvalsU8_20high{i}];% now each is 1x26
end




toc

%%
vals = [];
%%

%fvalue = [fvalsallU8himod; fvalsallU8himod2];
% fvalue = [fvalsallU5_1];
%fvalue = [fvalsallU8_1];
%fvalue = [fvalsallU10_1];
%fvalue = [fvalsallU4_1];
fvalue = fvalsall;
N = numel(fvalue{1});  % Assuming each is a cell array of size NÃ—1
M = numel(fvalue);
tempvals = zeros(M, N);  
for i = 1:N
   
    for fieldIdx = 1:M
        tempvals(fieldIdx, i) = fvalue{fieldIdx}{i};
    end
    
end

vals = [vals;tempvals];

meanFvalsall = mean(vals, 1);
stdFvalsall = std(vals)/sqrt(size(vals, 1));
%results = [resultsallU4himode];u-
%results = [resultsallU8himod; resultsallU8himod2];
%results = [resultsallU5_1];
 %results = [resultsallU8_1];
%results = [resultsallU10_1];
results = [resultsall];
%results = resultsall;