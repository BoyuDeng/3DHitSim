% function x = calculateX(t, a, b, c, tf, W, a0, c0, b0)
%     % Determine the number of terms in the sums
%     n = length(a);
% 
%     % Initialize the components of the vector
%     x1 = a0;  % Assuming a0 is the first element of vector a
%     x2 = b0 + W * t ;
%     x3 = c0;          % Assuming c0 is the first element of vector c
% 
%     % Compute the sums for each component
%     for i = 1:n
%         x1 = x1 + a(i) * sin(i * pi * t / tf);
%         x2 = x2 + b(i) * sin(i * pi * t / tf);
%         x3 = x3 + c(i) * sin(i * pi * t / tf);
%     end
% 
%     % Combine the components into a column vector
%     x = [x1; x2; x3];
% end


function X = calculateX(t, coeffs, W, StartLoc)
    % Determine the number of terms in the sums
    n = length(coeffs) / 3;
    
    % Extract coefficients for a, b, and c from the single coeffs vector
    a = coeffs(1:n);
    b = coeffs(n+1:2*n);
    c = coeffs(2*n+1:end);
    
    % Set odd-indexed elements of b to zero
    b(1:2:end) = 0;
    
    % Initialize the components of the vector
    a0 = StartLoc(1);
    b0 = StartLoc(2);
    c0 = 0;  % Assuming c0 is initially 0
    
    % Initialize the result matrix X
    X = zeros(3, length(t));
    
    % Compute the sums for each component
    for i = 1:n
        X(1, :) = X(1, :) + a(i) * sin(i * pi * t / t(end));
        X(2, :) = X(2, :) + b(i) * sin(i * pi * t / t(end));
        X(3, :) = X(3, :) + c(i) * sin(i * pi * t / t(end));
    end
    
    % Add the initial positions and linear term for x2
    X(1, :) = X(1, :) + a0;
    X(2, :) = X(2, :) + b0 + W * t;
    X(3, :) = X(3, :) + c0;
end

